/*
Majority Element
Given an array A of N elements. Find the majority element in the array. A majority element in an array A of size N is an element that appears more than N/2 times in the array.

Input:  
The first line of the input contains T denoting the number of testcases. The first line of the test case will be the size of array and second line will be the elements of the array.

Output: 
For each test case the output will be the majority element of the array. Output "-1" if no majority element is there in the array.

Constraints:
1 <= T<= 100
1 <= N <= 107
0 <= Ai <= 106

Example:
Input:
2
5
3 1 3 3 2
3
1 2 3

Output:
3
-1

Explanation:
Testcase 1: Since, 3 is present more than N/2 times, so it is the majority element.
 */
 
 
 
 
 /*package whatever //do not write package name here */

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
    
  	public static void main (String[] args) throws java.lang.Exception
	{
	  	BufferedReader bi = new BufferedReader(new InputStreamReader(System.in));
		int t = Integer.valueOf(bi.readLine());
	    for(int k=0;k<t;k++)
	    {
	       int n = Integer.valueOf(bi.readLine());
			String[] arr = bi.readLine().split("\\s");
            int major=0,count=1;
            for(int i=1;i<n;i++)
            {
               if(arr[major].equals(arr[i]))
                 count++;
               else
                 count--;
               if(count==0)
               {
                 major=i;
                 count=1;
               }
            }
           count=0;
        //counting the freq of major candidate
            for(int i=0;i<n;i++)
            {
               if(arr[i].equals(arr[major]))
                 count++;
             }
        
        if(count>n/2)
          System.out.println(arr[major]);
         else
         System.out.println(-1);
	       

	        

	   }  
	}
	
}
